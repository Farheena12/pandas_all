# -*- coding: utf-8 -*-
"""pandasimp.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1p1-AulZ6EirT4ubnsH_sb8EMDHjvaK-c

# **Pandas Commands**
"""

import pandas as pd

"""#There are many ways to create dataframe,some of them are
##1 : DataFrame using Dictionary
##2 : DataFrame using lists
##3 : DataFrame using Numpy
"""

# DataFrame Creation
data = {'Name': ['John','Riya','Joy','Leena','Bilal'], 'Salary': [80000,50000,90000,150000,95000],'Position':['Data science','Data analyst','Data analyst','Data science','Data science']}
df_dict = pd.DataFrame(data)
df_dict

# Define the data
data = [['John', 80000, 'Data science'],
['Riya', 50000, 'Data analyst'],
['Joy', 90000, 'Data analyst'],
['Leena', 150000, 'Data science'],
['Bilal', 95000, 'Data science']]
df_lists = pd.DataFrame(data, columns=['Name', 'Salary','Position'])
df_lists

import numpy as np
data = np.array([['John', 80000, 'Data science'],['Riya', 50000, 'Data analyst'],
['Joy', 90000, 'Data analyst'],
['Leena', 150000, 'Data science'],
['Bilal', 95000, 'Data science']])
df_numpy = pd.DataFrame(data, columns=['Name', 'Salary','Position'])
df_numpy

"""## Importing and Exporting Data"""

df_dict.to_csv('salary1.csv', index=False)
df_lists.to_excel('salary2.xlsx', index=False)
df_numpy.to_json('salary3.json')

df1 = pd.read_csv('salary1.csv')
df2 = pd.read_excel('salary2.xlsx', sheet_name='Sheet1')
df3 = pd.read_json('salary3.json')

"""## Viewing and Inspecting Data"""

df1.head()

df2.tail()

df3[1:]

df1.info()

df2.describe()

df1.dtypes

df1.isnull().sum()

df1.index

df1.columns

"""### Data Selection and Filtering"""

#df1['Name']
df1.Name

df1[['Name', 'Salary']]

df1.iloc[0]  # First row

df1.iloc[0:3]  # First three rows

df1[df1['Salary'] > 50000]

df1.loc[0:2, ['Name', 'Position']]

"""### Data Manipulation"""

df1['Location'] = ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix']
df1

df1.drop('Location', axis=1, inplace=True)
df1

df1.rename(columns={'Name': 'person'}, inplace=True)
df1

df1.sort_values(by='Salary', ascending=True)

df1.reset_index(drop=True, inplace=True)
df1

df1.dropna(inplace=True)
df1

df1.drop(1,inplace=True)
df1

df1.replace(to_replace=90000,value=85000 , inplace=True)
df1

"""## Data Aggregation and Grouping"""

df1.groupby('Position').agg({'Position': 'count'})

df1.groupby('Position').agg({'Salary':'mean'})

"""### Merging and Joining DataFrames"""

result = pd.concat([df1, df2])
result

result = pd.merge(df1, df2, on='Position')
result

"""## Time Series Data"""

df1['date'] = ['8/26/24','8/27/24','8/28/24','8/25/24']
df1

#print(df1['date'].dtype)
df1.dtypes

df1['date'] = pd.to_datetime(df1['date'], errors='coerce')
df1

df1 = df1.set_index('date')
df1

df1

"""## Plotting"""

df1.plot()

df1.plot.bar(xlabel='date',color='pink')

df1['Salary'].plot.hist(color='green')

"""## Advanced Operations"""

df1['Salary_addon'] = df1['Salary'].apply(lambda x:x+1000)
df1

df1['Salary_addon2'] = df1.apply(lambda row: row['Salary'] - row['Salary_addon'], axis=1)
df1

df1['rolling_mean'] = df1['Salary_addon'].rolling(window=3).mean()
df1